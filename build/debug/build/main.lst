ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB218:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** #include "LCD_I2C.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** int LCD_ADDR_CONFIG = 0x27;
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 2


  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** //LCD_ADDR_CONFIG = 0x27;
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** UART_HandleTypeDef huart2;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** static void MX_GPIO_Init(void);
  57:Core/Src/main.c **** static void MX_I2C1_Init(void);
  58:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END 0 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /**
  69:Core/Src/main.c ****   * @brief  The application entry point.
  70:Core/Src/main.c ****   * @retval int
  71:Core/Src/main.c ****   */
  72:Core/Src/main.c **** int main(void)
  73:Core/Src/main.c **** {
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE END 1 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  82:Core/Src/main.c ****   HAL_Init();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END Init */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Configure the system clock */
  89:Core/Src/main.c ****   SystemClock_Config();
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END SysInit */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Initialize all configured peripherals */
  96:Core/Src/main.c ****   MX_GPIO_Init();
  97:Core/Src/main.c ****   MX_I2C1_Init();
  98:Core/Src/main.c ****   MX_USART2_UART_Init();
  99:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 100:Core/Src/main.c ****   LCD_ADDR_CONFIG = 0x22;
 101:Core/Src/main.c ****   I2C_Scan();
 102:Core/Src/main.c ****   LCD_Init();
 103:Core/Src/main.c ****   LCD_ADDR_CONFIG = 0x27;
 104:Core/Src/main.c ****   LCD_Init();
 105:Core/Src/main.c ****   char msg[] = "Hello!\r\n";
 106:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END 2 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Infinite loop */
 111:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 112:Core/Src/main.c ****   while (1)
 113:Core/Src/main.c ****   {
 114:Core/Src/main.c ****     /* USER CODE END WHILE */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 117:Core/Src/main.c ****     // set address to 0x00
 118:Core/Src/main.c ****     
 119:Core/Src/main.c ****     
 120:Core/Src/main.c ****     LCD_ADDR_CONFIG = 0x27;
 121:Core/Src/main.c ****     LCD_SetCursor(0,2);
 122:Core/Src/main.c ****     LCD_SendString("Using 1602 LCD1");
 123:Core/Src/main.c ****     LCD_SetCursor(1,0);
 124:Core/Src/main.c ****     LCD_SendString("  over I2C bus");
 125:Core/Src/main.c ****     HAL_Delay(1000);
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****     LCD_Clear();
 128:Core/Src/main.c ****     LCD_SetCursor(0,0);
 129:Core/Src/main.c ****     LCD_SendString("LCD1 addr0x27");
 130:Core/Src/main.c ****     HAL_Delay(1000);
 131:Core/Src/main.c ****     LCD_Clear();
 132:Core/Src/main.c ****     LCD_ShiftText("shifting the text to the right direction for 10 seconds",'R',60,10000);
 133:Core/Src/main.c ****     HAL_Delay(1000);
 134:Core/Src/main.c ****     LCD_Clear();
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_6);
 138:Core/Src/main.c ****     HAL_Delay(1000);
 139:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_6);
 140:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 141:Core/Src/main.c ****     HAL_Delay(1000);
 142:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****     LCD_ADDR_CONFIG = 0x22;
 145:Core/Src/main.c ****     LCD_SetCursor(0,2);
 146:Core/Src/main.c ****     LCD_SendString("Using 1602 LCD2");
 147:Core/Src/main.c ****     LCD_SetCursor(1,0);
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 4


 148:Core/Src/main.c ****     LCD_SendString("  over I2C bus");
 149:Core/Src/main.c ****     HAL_Delay(1000);
 150:Core/Src/main.c ****     
 151:Core/Src/main.c ****     LCD_Clear();
 152:Core/Src/main.c ****     LCD_SetCursor(0,0);
 153:Core/Src/main.c ****     LCD_SendString("LCD1 addr 0x22");
 154:Core/Src/main.c ****     HAL_Delay(1000); 
 155:Core/Src/main.c ****     LCD_Clear();
 156:Core/Src/main.c ****     LCD_ShiftText("shifting the text to the left direction for 10 seconds",'L',50,10000);
 157:Core/Src/main.c ****     HAL_Delay(1000);
 158:Core/Src/main.c ****     LCD_Clear();
 159:Core/Src/main.c ****    
 160:Core/Src/main.c ****   
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c ****   /* USER CODE END 3 */
 163:Core/Src/main.c **** }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** /**
 166:Core/Src/main.c ****   * @brief System Clock Configuration
 167:Core/Src/main.c ****   * @retval None
 168:Core/Src/main.c ****   */
 169:Core/Src/main.c **** void SystemClock_Config(void)
 170:Core/Src/main.c **** {
 171:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 172:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 175:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 176:Core/Src/main.c ****   */
 177:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 178:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 179:Core/Src/main.c ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 180:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 181:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 182:Core/Src/main.c ****   {
 183:Core/Src/main.c ****     Error_Handler();
 184:Core/Src/main.c ****   }
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 189:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 190:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 191:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 192:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 196:Core/Src/main.c ****   {
 197:Core/Src/main.c ****     Error_Handler();
 198:Core/Src/main.c ****   }
 199:Core/Src/main.c **** }
 200:Core/Src/main.c **** 
 201:Core/Src/main.c **** /**
 202:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 203:Core/Src/main.c ****   * @param None
 204:Core/Src/main.c ****   * @retval None
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 5


 205:Core/Src/main.c ****   */
 206:Core/Src/main.c **** static void MX_I2C1_Init(void)
 207:Core/Src/main.c **** {
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 216:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 217:Core/Src/main.c ****   hi2c1.Init.Timing = 0x20303E5D;
 218:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 219:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 220:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 221:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 222:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 223:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 224:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 225:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 226:Core/Src/main.c ****   {
 227:Core/Src/main.c ****     Error_Handler();
 228:Core/Src/main.c ****   }
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /** Configure Analogue filter
 231:Core/Src/main.c ****   */
 232:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 233:Core/Src/main.c ****   {
 234:Core/Src/main.c ****     Error_Handler();
 235:Core/Src/main.c ****   }
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /** Configure Digital filter
 238:Core/Src/main.c ****   */
 239:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 240:Core/Src/main.c ****   {
 241:Core/Src/main.c ****     Error_Handler();
 242:Core/Src/main.c ****   }
 243:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** }
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** /**
 250:Core/Src/main.c ****   * @brief USART2 Initialization Function
 251:Core/Src/main.c ****   * @param None
 252:Core/Src/main.c ****   * @retval None
 253:Core/Src/main.c ****   */
 254:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 255:Core/Src/main.c **** {
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 6


 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 264:Core/Src/main.c ****   huart2.Instance = USART2;
 265:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 266:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 267:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 268:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 269:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 270:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 271:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 272:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 273:Core/Src/main.c ****   huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 274:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 275:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 276:Core/Src/main.c ****   {
 277:Core/Src/main.c ****     Error_Handler();
 278:Core/Src/main.c ****   }
 279:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 282:Core/Src/main.c **** 
 283:Core/Src/main.c **** }
 284:Core/Src/main.c **** 
 285:Core/Src/main.c **** /**
 286:Core/Src/main.c ****   * @brief GPIO Initialization Function
 287:Core/Src/main.c ****   * @param None
 288:Core/Src/main.c ****   * @retval None
 289:Core/Src/main.c ****   */
 290:Core/Src/main.c **** static void MX_GPIO_Init(void)
 291:Core/Src/main.c **** {
  26              		.loc 1 291 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 40
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  37 0002 8AB0     		sub	sp, sp, #40
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 56
 292:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 292 3 view .LVU1
  41              		.loc 1 292 20 is_stmt 0 view .LVU2
  42 0004 1422     		movs	r2, #20
  43 0006 0021     		movs	r1, #0
  44 0008 05A8     		add	r0, sp, #20
  45 000a FFF7FEFF 		bl	memset
  46              	.LVL0:
 293:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 294:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 297:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 7


  47              		.loc 1 297 3 is_stmt 1 view .LVU3
  48              	.LBB4:
  49              		.loc 1 297 3 view .LVU4
  50              		.loc 1 297 3 view .LVU5
  51 000e 234B     		ldr	r3, .L2
  52 0010 596B     		ldr	r1, [r3, #52]
  53 0012 0422     		movs	r2, #4
  54 0014 1143     		orrs	r1, r2
  55 0016 5963     		str	r1, [r3, #52]
  56              		.loc 1 297 3 view .LVU6
  57 0018 596B     		ldr	r1, [r3, #52]
  58 001a 0A40     		ands	r2, r1
  59 001c 0192     		str	r2, [sp, #4]
  60              		.loc 1 297 3 view .LVU7
  61 001e 019A     		ldr	r2, [sp, #4]
  62              	.LBE4:
  63              		.loc 1 297 3 view .LVU8
 298:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  64              		.loc 1 298 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 298 3 view .LVU10
  67              		.loc 1 298 3 view .LVU11
  68 0020 596B     		ldr	r1, [r3, #52]
  69 0022 2022     		movs	r2, #32
  70 0024 1143     		orrs	r1, r2
  71 0026 5963     		str	r1, [r3, #52]
  72              		.loc 1 298 3 view .LVU12
  73 0028 596B     		ldr	r1, [r3, #52]
  74 002a 0A40     		ands	r2, r1
  75 002c 0292     		str	r2, [sp, #8]
  76              		.loc 1 298 3 view .LVU13
  77 002e 029A     		ldr	r2, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 298 3 view .LVU14
 299:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 299 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 299 3 view .LVU16
  83              		.loc 1 299 3 view .LVU17
  84 0030 5A6B     		ldr	r2, [r3, #52]
  85 0032 0125     		movs	r5, #1
  86 0034 2A43     		orrs	r2, r5
  87 0036 5A63     		str	r2, [r3, #52]
  88              		.loc 1 299 3 view .LVU18
  89 0038 5A6B     		ldr	r2, [r3, #52]
  90 003a 2A40     		ands	r2, r5
  91 003c 0392     		str	r2, [sp, #12]
  92              		.loc 1 299 3 view .LVU19
  93 003e 039A     		ldr	r2, [sp, #12]
  94              	.LBE6:
  95              		.loc 1 299 3 view .LVU20
 300:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  96              		.loc 1 300 3 view .LVU21
  97              	.LBB7:
  98              		.loc 1 300 3 view .LVU22
  99              		.loc 1 300 3 view .LVU23
 100 0040 596B     		ldr	r1, [r3, #52]
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 8


 101 0042 0222     		movs	r2, #2
 102 0044 1143     		orrs	r1, r2
 103 0046 5963     		str	r1, [r3, #52]
 104              		.loc 1 300 3 view .LVU24
 105 0048 5B6B     		ldr	r3, [r3, #52]
 106 004a 1A40     		ands	r2, r3
 107 004c 0492     		str	r2, [sp, #16]
 108              		.loc 1 300 3 view .LVU25
 109 004e 049B     		ldr	r3, [sp, #16]
 110              	.LBE7:
 111              		.loc 1 300 3 view .LVU26
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 303:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5|GPIO_PIN_6, GPIO_PIN_RESET);
 112              		.loc 1 303 3 view .LVU27
 113 0050 A026     		movs	r6, #160
 114 0052 F605     		lsls	r6, r6, #23
 115 0054 0022     		movs	r2, #0
 116 0056 6021     		movs	r1, #96
 117 0058 3000     		movs	r0, r6
 118 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 119              	.LVL1:
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /*Configure GPIO pin : User_Button_Pin */
 306:Core/Src/main.c ****   GPIO_InitStruct.Pin = User_Button_Pin;
 120              		.loc 1 306 3 view .LVU28
 121              		.loc 1 306 23 is_stmt 0 view .LVU29
 122 005e 8023     		movs	r3, #128
 123 0060 9B01     		lsls	r3, r3, #6
 124 0062 0593     		str	r3, [sp, #20]
 307:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 125              		.loc 1 307 3 is_stmt 1 view .LVU30
 126              		.loc 1 307 24 is_stmt 0 view .LVU31
 127 0064 0E4B     		ldr	r3, .L2+4
 128 0066 0693     		str	r3, [sp, #24]
 308:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 129              		.loc 1 308 3 is_stmt 1 view .LVU32
 130              		.loc 1 308 24 is_stmt 0 view .LVU33
 131 0068 0024     		movs	r4, #0
 132 006a 0794     		str	r4, [sp, #28]
 309:Core/Src/main.c ****   HAL_GPIO_Init(User_Button_GPIO_Port, &GPIO_InitStruct);
 133              		.loc 1 309 3 is_stmt 1 view .LVU34
 134 006c 05A9     		add	r1, sp, #20
 135 006e 0D48     		ldr	r0, .L2+8
 136 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 137              	.LVL2:
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /*Configure GPIO pins : PA5 PA6 */
 312:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 138              		.loc 1 312 3 view .LVU35
 139              		.loc 1 312 23 is_stmt 0 view .LVU36
 140 0074 6023     		movs	r3, #96
 141 0076 0593     		str	r3, [sp, #20]
 313:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 142              		.loc 1 313 3 is_stmt 1 view .LVU37
 143              		.loc 1 313 24 is_stmt 0 view .LVU38
 144 0078 0695     		str	r5, [sp, #24]
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 9


 314:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 145              		.loc 1 314 3 is_stmt 1 view .LVU39
 146              		.loc 1 314 24 is_stmt 0 view .LVU40
 147 007a 0794     		str	r4, [sp, #28]
 315:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 148              		.loc 1 315 3 is_stmt 1 view .LVU41
 149              		.loc 1 315 25 is_stmt 0 view .LVU42
 150 007c 0894     		str	r4, [sp, #32]
 316:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 151              		.loc 1 316 3 is_stmt 1 view .LVU43
 152 007e 05A9     		add	r1, sp, #20
 153 0080 3000     		movs	r0, r6
 154 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 155              	.LVL3:
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   /* EXTI interrupt init*/
 319:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI4_15_IRQn, 0, 0);
 156              		.loc 1 319 3 view .LVU44
 157 0086 0022     		movs	r2, #0
 158 0088 0021     		movs	r1, #0
 159 008a 0720     		movs	r0, #7
 160 008c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 161              	.LVL4:
 320:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);
 162              		.loc 1 320 3 view .LVU45
 163 0090 0720     		movs	r0, #7
 164 0092 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 165              	.LVL5:
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 323:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 324:Core/Src/main.c **** }
 166              		.loc 1 324 1 is_stmt 0 view .LVU46
 167 0096 0AB0     		add	sp, sp, #40
 168              		@ sp needed
 169 0098 70BD     		pop	{r4, r5, r6, pc}
 170              	.L3:
 171 009a C046     		.align	2
 172              	.L2:
 173 009c 00100240 		.word	1073876992
 174 00a0 00001110 		.word	269549568
 175 00a4 00080050 		.word	1342179328
 176              		.cfi_endproc
 177              	.LFE218:
 179              		.section	.text.Error_Handler,"ax",%progbits
 180              		.align	1
 181              		.global	Error_Handler
 182              		.syntax unified
 183              		.code	16
 184              		.thumb_func
 186              	Error_Handler:
 187              	.LFB219:
 325:Core/Src/main.c **** 
 326:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** /* USER CODE END 4 */
 329:Core/Src/main.c **** 
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 10


 330:Core/Src/main.c **** /**
 331:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 332:Core/Src/main.c ****   * @retval None
 333:Core/Src/main.c ****   */
 334:Core/Src/main.c **** void Error_Handler(void)
 335:Core/Src/main.c **** {
 188              		.loc 1 335 1 is_stmt 1 view -0
 189              		.cfi_startproc
 190              		@ Volatile: function does not return.
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 336:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 337:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 338:Core/Src/main.c ****   __disable_irq();
 194              		.loc 1 338 3 view .LVU48
 195              	.LBB8:
 196              	.LBI8:
 197              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 11


  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 12


  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 13


 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 14


 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 15


 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 16


 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 17


 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 18


 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 19


 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 20


 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 21


 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 22


 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 23


 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 24


 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 25


 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 26


 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 27


 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 198              		.loc 2 960 27 view .LVU49
 199              	.LBB9:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 200              		.loc 2 962 3 view .LVU50
 201              		.syntax divided
 202              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 203 0000 72B6     		cpsid i
 204              	@ 0 "" 2
 205              		.thumb
 206              		.syntax unified
 207              	.L5:
 208              	.LBE9:
 209              	.LBE8:
 339:Core/Src/main.c ****   while (1)
 210              		.loc 1 339 3 view .LVU51
 340:Core/Src/main.c ****   {
 341:Core/Src/main.c ****   }
 211              		.loc 1 341 3 view .LVU52
 339:Core/Src/main.c ****   while (1)
 212              		.loc 1 339 9 view .LVU53
 213 0002 FEE7     		b	.L5
 214              		.cfi_endproc
 215              	.LFE219:
 217              		.section	.text.MX_I2C1_Init,"ax",%progbits
 218              		.align	1
 219              		.syntax unified
 220              		.code	16
 221              		.thumb_func
 223              	MX_I2C1_Init:
 224              	.LFB216:
 207:Core/Src/main.c **** 
 225              		.loc 1 207 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229 0000 10B5     		push	{r4, lr}
 230              	.LCFI2:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 4, -8
 233              		.cfi_offset 14, -4
 216:Core/Src/main.c ****   hi2c1.Init.Timing = 0x20303E5D;
 234              		.loc 1 216 3 view .LVU55
 216:Core/Src/main.c ****   hi2c1.Init.Timing = 0x20303E5D;
 235              		.loc 1 216 18 is_stmt 0 view .LVU56
 236 0002 1248     		ldr	r0, .L13
 237 0004 124B     		ldr	r3, .L13+4
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 28


 238 0006 0360     		str	r3, [r0]
 217:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 239              		.loc 1 217 3 is_stmt 1 view .LVU57
 217:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 240              		.loc 1 217 21 is_stmt 0 view .LVU58
 241 0008 124B     		ldr	r3, .L13+8
 242 000a 4360     		str	r3, [r0, #4]
 218:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 243              		.loc 1 218 3 is_stmt 1 view .LVU59
 218:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 244              		.loc 1 218 26 is_stmt 0 view .LVU60
 245 000c 0023     		movs	r3, #0
 246 000e 8360     		str	r3, [r0, #8]
 219:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 247              		.loc 1 219 3 is_stmt 1 view .LVU61
 219:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 248              		.loc 1 219 29 is_stmt 0 view .LVU62
 249 0010 0122     		movs	r2, #1
 250 0012 C260     		str	r2, [r0, #12]
 220:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 251              		.loc 1 220 3 is_stmt 1 view .LVU63
 220:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 252              		.loc 1 220 30 is_stmt 0 view .LVU64
 253 0014 0361     		str	r3, [r0, #16]
 221:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 254              		.loc 1 221 3 is_stmt 1 view .LVU65
 221:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 255              		.loc 1 221 26 is_stmt 0 view .LVU66
 256 0016 4361     		str	r3, [r0, #20]
 222:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 257              		.loc 1 222 3 is_stmt 1 view .LVU67
 222:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 258              		.loc 1 222 31 is_stmt 0 view .LVU68
 259 0018 8361     		str	r3, [r0, #24]
 223:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 260              		.loc 1 223 3 is_stmt 1 view .LVU69
 223:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 261              		.loc 1 223 30 is_stmt 0 view .LVU70
 262 001a C361     		str	r3, [r0, #28]
 224:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 263              		.loc 1 224 3 is_stmt 1 view .LVU71
 224:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 264              		.loc 1 224 28 is_stmt 0 view .LVU72
 265 001c 0362     		str	r3, [r0, #32]
 225:Core/Src/main.c ****   {
 266              		.loc 1 225 3 is_stmt 1 view .LVU73
 225:Core/Src/main.c ****   {
 267              		.loc 1 225 7 is_stmt 0 view .LVU74
 268 001e FFF7FEFF 		bl	HAL_I2C_Init
 269              	.LVL6:
 225:Core/Src/main.c ****   {
 270              		.loc 1 225 6 discriminator 1 view .LVU75
 271 0022 0028     		cmp	r0, #0
 272 0024 0CD1     		bne	.L10
 232:Core/Src/main.c ****   {
 273              		.loc 1 232 3 is_stmt 1 view .LVU76
 232:Core/Src/main.c ****   {
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 29


 274              		.loc 1 232 7 is_stmt 0 view .LVU77
 275 0026 0948     		ldr	r0, .L13
 276 0028 0021     		movs	r1, #0
 277 002a FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 278              	.LVL7:
 232:Core/Src/main.c ****   {
 279              		.loc 1 232 6 discriminator 1 view .LVU78
 280 002e 0028     		cmp	r0, #0
 281 0030 08D1     		bne	.L11
 239:Core/Src/main.c ****   {
 282              		.loc 1 239 3 is_stmt 1 view .LVU79
 239:Core/Src/main.c ****   {
 283              		.loc 1 239 7 is_stmt 0 view .LVU80
 284 0032 0648     		ldr	r0, .L13
 285 0034 0021     		movs	r1, #0
 286 0036 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 287              	.LVL8:
 239:Core/Src/main.c ****   {
 288              		.loc 1 239 6 discriminator 1 view .LVU81
 289 003a 0028     		cmp	r0, #0
 290 003c 04D1     		bne	.L12
 247:Core/Src/main.c **** 
 291              		.loc 1 247 1 view .LVU82
 292              		@ sp needed
 293 003e 10BD     		pop	{r4, pc}
 294              	.L10:
 227:Core/Src/main.c ****   }
 295              		.loc 1 227 5 is_stmt 1 view .LVU83
 296 0040 FFF7FEFF 		bl	Error_Handler
 297              	.LVL9:
 298              	.L11:
 234:Core/Src/main.c ****   }
 299              		.loc 1 234 5 view .LVU84
 300 0044 FFF7FEFF 		bl	Error_Handler
 301              	.LVL10:
 302              	.L12:
 241:Core/Src/main.c ****   }
 303              		.loc 1 241 5 view .LVU85
 304 0048 FFF7FEFF 		bl	Error_Handler
 305              	.LVL11:
 306              	.L14:
 307              		.align	2
 308              	.L13:
 309 004c 00000000 		.word	hi2c1
 310 0050 00540040 		.word	1073763328
 311 0054 5D3E3020 		.word	540032605
 312              		.cfi_endproc
 313              	.LFE216:
 315              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 316              		.align	1
 317              		.syntax unified
 318              		.code	16
 319              		.thumb_func
 321              	MX_USART2_UART_Init:
 322              	.LFB217:
 255:Core/Src/main.c **** 
 323              		.loc 1 255 1 view -0
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 30


 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327 0000 10B5     		push	{r4, lr}
 328              	.LCFI3:
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 4, -8
 331              		.cfi_offset 14, -4
 264:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 332              		.loc 1 264 3 view .LVU87
 264:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 333              		.loc 1 264 19 is_stmt 0 view .LVU88
 334 0002 0C48     		ldr	r0, .L18
 335 0004 0C4B     		ldr	r3, .L18+4
 336 0006 0360     		str	r3, [r0]
 265:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 337              		.loc 1 265 3 is_stmt 1 view .LVU89
 265:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 338              		.loc 1 265 24 is_stmt 0 view .LVU90
 339 0008 E123     		movs	r3, #225
 340 000a 5B02     		lsls	r3, r3, #9
 341 000c 4360     		str	r3, [r0, #4]
 266:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 342              		.loc 1 266 3 is_stmt 1 view .LVU91
 266:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 343              		.loc 1 266 26 is_stmt 0 view .LVU92
 344 000e 0023     		movs	r3, #0
 345 0010 8360     		str	r3, [r0, #8]
 267:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 346              		.loc 1 267 3 is_stmt 1 view .LVU93
 267:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 347              		.loc 1 267 24 is_stmt 0 view .LVU94
 348 0012 C360     		str	r3, [r0, #12]
 268:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 349              		.loc 1 268 3 is_stmt 1 view .LVU95
 268:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 350              		.loc 1 268 22 is_stmt 0 view .LVU96
 351 0014 0361     		str	r3, [r0, #16]
 269:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 352              		.loc 1 269 3 is_stmt 1 view .LVU97
 269:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 353              		.loc 1 269 20 is_stmt 0 view .LVU98
 354 0016 0C22     		movs	r2, #12
 355 0018 4261     		str	r2, [r0, #20]
 270:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 356              		.loc 1 270 3 is_stmt 1 view .LVU99
 270:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 357              		.loc 1 270 25 is_stmt 0 view .LVU100
 358 001a 8361     		str	r3, [r0, #24]
 271:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 359              		.loc 1 271 3 is_stmt 1 view .LVU101
 271:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 360              		.loc 1 271 28 is_stmt 0 view .LVU102
 361 001c C361     		str	r3, [r0, #28]
 272:Core/Src/main.c ****   huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 362              		.loc 1 272 3 is_stmt 1 view .LVU103
 272:Core/Src/main.c ****   huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 31


 363              		.loc 1 272 30 is_stmt 0 view .LVU104
 364 001e 0362     		str	r3, [r0, #32]
 273:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 365              		.loc 1 273 3 is_stmt 1 view .LVU105
 273:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 366              		.loc 1 273 30 is_stmt 0 view .LVU106
 367 0020 4362     		str	r3, [r0, #36]
 274:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 368              		.loc 1 274 3 is_stmt 1 view .LVU107
 274:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 369              		.loc 1 274 38 is_stmt 0 view .LVU108
 370 0022 8362     		str	r3, [r0, #40]
 275:Core/Src/main.c ****   {
 371              		.loc 1 275 3 is_stmt 1 view .LVU109
 275:Core/Src/main.c ****   {
 372              		.loc 1 275 7 is_stmt 0 view .LVU110
 373 0024 FFF7FEFF 		bl	HAL_UART_Init
 374              	.LVL12:
 275:Core/Src/main.c ****   {
 375              		.loc 1 275 6 discriminator 1 view .LVU111
 376 0028 0028     		cmp	r0, #0
 377 002a 00D1     		bne	.L17
 283:Core/Src/main.c **** 
 378              		.loc 1 283 1 view .LVU112
 379              		@ sp needed
 380 002c 10BD     		pop	{r4, pc}
 381              	.L17:
 277:Core/Src/main.c ****   }
 382              		.loc 1 277 5 is_stmt 1 view .LVU113
 383 002e FFF7FEFF 		bl	Error_Handler
 384              	.LVL13:
 385              	.L19:
 386 0032 C046     		.align	2
 387              	.L18:
 388 0034 00000000 		.word	huart2
 389 0038 00440040 		.word	1073759232
 390              		.cfi_endproc
 391              	.LFE217:
 393              		.section	.text.SystemClock_Config,"ax",%progbits
 394              		.align	1
 395              		.global	SystemClock_Config
 396              		.syntax unified
 397              		.code	16
 398              		.thumb_func
 400              	SystemClock_Config:
 401              	.LFB215:
 170:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 402              		.loc 1 170 1 view -0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 48
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406 0000 00B5     		push	{lr}
 407              	.LCFI4:
 408              		.cfi_def_cfa_offset 4
 409              		.cfi_offset 14, -4
 410 0002 8DB0     		sub	sp, sp, #52
 411              	.LCFI5:
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 32


 412              		.cfi_def_cfa_offset 56
 171:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 413              		.loc 1 171 3 view .LVU115
 171:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 414              		.loc 1 171 22 is_stmt 0 view .LVU116
 415 0004 1C22     		movs	r2, #28
 416 0006 0021     		movs	r1, #0
 417 0008 05A8     		add	r0, sp, #20
 418 000a FFF7FEFF 		bl	memset
 419              	.LVL14:
 172:Core/Src/main.c **** 
 420              		.loc 1 172 3 is_stmt 1 view .LVU117
 172:Core/Src/main.c **** 
 421              		.loc 1 172 22 is_stmt 0 view .LVU118
 422 000e 1422     		movs	r2, #20
 423 0010 0021     		movs	r1, #0
 424 0012 6846     		mov	r0, sp
 425 0014 FFF7FEFF 		bl	memset
 426              	.LVL15:
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 427              		.loc 1 177 3 is_stmt 1 view .LVU119
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 428              		.loc 1 177 36 is_stmt 0 view .LVU120
 429 0018 0223     		movs	r3, #2
 430 001a 0593     		str	r3, [sp, #20]
 178:Core/Src/main.c ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 431              		.loc 1 178 3 is_stmt 1 view .LVU121
 178:Core/Src/main.c ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 432              		.loc 1 178 30 is_stmt 0 view .LVU122
 433 001c FE33     		adds	r3, r3, #254
 434 001e 0893     		str	r3, [sp, #32]
 179:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 435              		.loc 1 179 3 is_stmt 1 view .LVU123
 180:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 436              		.loc 1 180 3 view .LVU124
 180:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 437              		.loc 1 180 41 is_stmt 0 view .LVU125
 438 0020 C03B     		subs	r3, r3, #192
 439 0022 0A93     		str	r3, [sp, #40]
 181:Core/Src/main.c ****   {
 440              		.loc 1 181 3 is_stmt 1 view .LVU126
 181:Core/Src/main.c ****   {
 441              		.loc 1 181 7 is_stmt 0 view .LVU127
 442 0024 05A8     		add	r0, sp, #20
 443 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 444              	.LVL16:
 181:Core/Src/main.c ****   {
 445              		.loc 1 181 6 discriminator 1 view .LVU128
 446 002a 0028     		cmp	r0, #0
 447 002c 0ED1     		bne	.L23
 188:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 448              		.loc 1 188 3 is_stmt 1 view .LVU129
 188:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 449              		.loc 1 188 31 is_stmt 0 view .LVU130
 450 002e 0723     		movs	r3, #7
 451 0030 0093     		str	r3, [sp]
 190:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 33


 452              		.loc 1 190 3 is_stmt 1 view .LVU131
 190:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 453              		.loc 1 190 34 is_stmt 0 view .LVU132
 454 0032 0023     		movs	r3, #0
 455 0034 0193     		str	r3, [sp, #4]
 191:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 456              		.loc 1 191 3 is_stmt 1 view .LVU133
 191:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 457              		.loc 1 191 35 is_stmt 0 view .LVU134
 458 0036 0293     		str	r3, [sp, #8]
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 459              		.loc 1 192 3 is_stmt 1 view .LVU135
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 460              		.loc 1 192 35 is_stmt 0 view .LVU136
 461 0038 0393     		str	r3, [sp, #12]
 193:Core/Src/main.c **** 
 462              		.loc 1 193 3 is_stmt 1 view .LVU137
 193:Core/Src/main.c **** 
 463              		.loc 1 193 36 is_stmt 0 view .LVU138
 464 003a 0493     		str	r3, [sp, #16]
 195:Core/Src/main.c ****   {
 465              		.loc 1 195 3 is_stmt 1 view .LVU139
 195:Core/Src/main.c ****   {
 466              		.loc 1 195 7 is_stmt 0 view .LVU140
 467 003c 0121     		movs	r1, #1
 468 003e 6846     		mov	r0, sp
 469 0040 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 470              	.LVL17:
 195:Core/Src/main.c ****   {
 471              		.loc 1 195 6 discriminator 1 view .LVU141
 472 0044 0028     		cmp	r0, #0
 473 0046 03D1     		bne	.L24
 199:Core/Src/main.c **** 
 474              		.loc 1 199 1 view .LVU142
 475 0048 0DB0     		add	sp, sp, #52
 476              		@ sp needed
 477 004a 00BD     		pop	{pc}
 478              	.L23:
 183:Core/Src/main.c ****   }
 479              		.loc 1 183 5 is_stmt 1 view .LVU143
 480 004c FFF7FEFF 		bl	Error_Handler
 481              	.LVL18:
 482              	.L24:
 197:Core/Src/main.c ****   }
 483              		.loc 1 197 5 view .LVU144
 484 0050 FFF7FEFF 		bl	Error_Handler
 485              	.LVL19:
 486              		.cfi_endproc
 487              	.LFE215:
 489              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 490              		.align	2
 491              	.LC6:
 492 0000 5573696E 		.ascii	"Using 1602 LCD1\000"
 492      67203136 
 492      3032204C 
 492      43443100 
 493              		.align	2
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 34


 494              	.LC8:
 495 0010 20206F76 		.ascii	"  over I2C bus\000"
 495      65722049 
 495      32432062 
 495      757300
 496 001f 00       		.align	2
 497              	.LC10:
 498 0020 4C434431 		.ascii	"LCD1 addr0x27\000"
 498      20616464 
 498      72307832 
 498      3700
 499 002e 0000     		.align	2
 500              	.LC12:
 501 0030 73686966 		.ascii	"shifting the text to the right direction for 10 sec"
 501      74696E67 
 501      20746865 
 501      20746578 
 501      7420746F 
 502 0063 6F6E6473 		.ascii	"onds\000"
 502      00
 503              		.align	2
 504              	.LC14:
 505 0068 5573696E 		.ascii	"Using 1602 LCD2\000"
 505      67203136 
 505      3032204C 
 505      43443200 
 506              		.align	2
 507              	.LC16:
 508 0078 4C434431 		.ascii	"LCD1 addr 0x22\000"
 508      20616464 
 508      72203078 
 508      323200
 509 0087 00       		.align	2
 510              	.LC18:
 511 0088 73686966 		.ascii	"shifting the text to the left direction for 10 seco"
 511      74696E67 
 511      20746865 
 511      20746578 
 511      7420746F 
 512 00bb 6E647300 		.ascii	"nds\000"
 513 00bf 00       		.align	2
 514              	.LC3:
 515 00c0 48656C6C 		.ascii	"Hello!\015\012\000"
 515      6F210D0A 
 515      00
 516              		.section	.text.main,"ax",%progbits
 517              		.align	1
 518              		.global	main
 519              		.syntax unified
 520              		.code	16
 521              		.thumb_func
 523              	main:
 524              	.LFB214:
  73:Core/Src/main.c **** 
 525              		.loc 1 73 1 view -0
 526              		.cfi_startproc
 527              		@ Volatile: function does not return.
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 35


 528              		@ args = 0, pretend = 0, frame = 16
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 531              	.LCFI6:
 532              		.cfi_def_cfa_offset 20
 533              		.cfi_offset 4, -20
 534              		.cfi_offset 5, -16
 535              		.cfi_offset 6, -12
 536              		.cfi_offset 7, -8
 537              		.cfi_offset 14, -4
 538 0002 C646     		mov	lr, r8
 539 0004 00B5     		push	{lr}
 540              	.LCFI7:
 541              		.cfi_def_cfa_offset 24
 542              		.cfi_offset 8, -24
 543 0006 84B0     		sub	sp, sp, #16
 544              	.LCFI8:
 545              		.cfi_def_cfa_offset 40
  82:Core/Src/main.c **** 
 546              		.loc 1 82 3 view .LVU146
 547 0008 FFF7FEFF 		bl	HAL_Init
 548              	.LVL20:
  89:Core/Src/main.c **** 
 549              		.loc 1 89 3 view .LVU147
 550 000c FFF7FEFF 		bl	SystemClock_Config
 551              	.LVL21:
  96:Core/Src/main.c ****   MX_I2C1_Init();
 552              		.loc 1 96 3 view .LVU148
 553 0010 FFF7FEFF 		bl	MX_GPIO_Init
 554              	.LVL22:
  97:Core/Src/main.c ****   MX_USART2_UART_Init();
 555              		.loc 1 97 3 view .LVU149
 556 0014 FFF7FEFF 		bl	MX_I2C1_Init
 557              	.LVL23:
  98:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 558              		.loc 1 98 3 view .LVU150
 559 0018 FFF7FEFF 		bl	MX_USART2_UART_Init
 560              	.LVL24:
 100:Core/Src/main.c ****   I2C_Scan();
 561              		.loc 1 100 3 view .LVU151
 100:Core/Src/main.c ****   I2C_Scan();
 562              		.loc 1 100 19 is_stmt 0 view .LVU152
 563 001c 494C     		ldr	r4, .L27
 564 001e 2223     		movs	r3, #34
 565 0020 2360     		str	r3, [r4]
 101:Core/Src/main.c ****   LCD_Init();
 566              		.loc 1 101 3 is_stmt 1 view .LVU153
 567 0022 FFF7FEFF 		bl	I2C_Scan
 568              	.LVL25:
 102:Core/Src/main.c ****   LCD_ADDR_CONFIG = 0x27;
 569              		.loc 1 102 3 view .LVU154
 570 0026 FFF7FEFF 		bl	LCD_Init
 571              	.LVL26:
 103:Core/Src/main.c ****   LCD_Init();
 572              		.loc 1 103 3 view .LVU155
 103:Core/Src/main.c ****   LCD_Init();
 573              		.loc 1 103 19 is_stmt 0 view .LVU156
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 36


 574 002a 2723     		movs	r3, #39
 575 002c 2360     		str	r3, [r4]
 104:Core/Src/main.c ****   char msg[] = "Hello!\r\n";
 576              		.loc 1 104 3 is_stmt 1 view .LVU157
 577 002e FFF7FEFF 		bl	LCD_Init
 578              	.LVL27:
 105:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 579              		.loc 1 105 3 view .LVU158
 105:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 580              		.loc 1 105 8 is_stmt 0 view .LVU159
 581 0032 01AC     		add	r4, sp, #4
 582 0034 444B     		ldr	r3, .L27+4
 583 0036 2200     		movs	r2, r4
 584 0038 03CB     		ldmia	r3!, {r0, r1}
 585 003a 03C2     		stmia	r2!, {r0, r1}
 586 003c 1B78     		ldrb	r3, [r3]
 587 003e 1370     		strb	r3, [r2]
 106:Core/Src/main.c **** 
 588              		.loc 1 106 3 is_stmt 1 view .LVU160
 106:Core/Src/main.c **** 
 589              		.loc 1 106 45 is_stmt 0 view .LVU161
 590 0040 2000     		movs	r0, r4
 591 0042 FFF7FEFF 		bl	strlen
 592              	.LVL28:
 106:Core/Src/main.c **** 
 593              		.loc 1 106 3 discriminator 1 view .LVU162
 594 0046 0123     		movs	r3, #1
 595 0048 82B2     		uxth	r2, r0
 596 004a 4048     		ldr	r0, .L27+8
 597 004c 5B42     		rsbs	r3, r3, #0
 598 004e 2100     		movs	r1, r4
 599 0050 FFF7FEFF 		bl	HAL_UART_Transmit
 600              	.LVL29:
 601              	.L26:
 112:Core/Src/main.c ****   {
 602              		.loc 1 112 3 is_stmt 1 view .LVU163
 120:Core/Src/main.c ****     LCD_SetCursor(0,2);
 603              		.loc 1 120 5 view .LVU164
 120:Core/Src/main.c ****     LCD_SetCursor(0,2);
 604              		.loc 1 120 21 is_stmt 0 view .LVU165
 605 0054 3B4D     		ldr	r5, .L27
 606 0056 2723     		movs	r3, #39
 607 0058 2B60     		str	r3, [r5]
 121:Core/Src/main.c ****     LCD_SendString("Using 1602 LCD1");
 608              		.loc 1 121 5 is_stmt 1 view .LVU166
 609 005a 0221     		movs	r1, #2
 610 005c 0020     		movs	r0, #0
 611 005e FFF7FEFF 		bl	LCD_SetCursor
 612              	.LVL30:
 122:Core/Src/main.c ****     LCD_SetCursor(1,0);
 613              		.loc 1 122 5 view .LVU167
 614 0062 3B48     		ldr	r0, .L27+12
 615 0064 FFF7FEFF 		bl	LCD_SendString
 616              	.LVL31:
 123:Core/Src/main.c ****     LCD_SendString("  over I2C bus");
 617              		.loc 1 123 5 view .LVU168
 618 0068 0021     		movs	r1, #0
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 37


 619 006a 0120     		movs	r0, #1
 620 006c FFF7FEFF 		bl	LCD_SetCursor
 621              	.LVL32:
 124:Core/Src/main.c ****     HAL_Delay(1000);
 622              		.loc 1 124 5 view .LVU169
 623 0070 384B     		ldr	r3, .L27+16
 624 0072 9846     		mov	r8, r3
 625 0074 1800     		movs	r0, r3
 626 0076 FFF7FEFF 		bl	LCD_SendString
 627              	.LVL33:
 125:Core/Src/main.c **** 
 628              		.loc 1 125 5 view .LVU170
 629 007a FA24     		movs	r4, #250
 630 007c A400     		lsls	r4, r4, #2
 631 007e 2000     		movs	r0, r4
 632 0080 FFF7FEFF 		bl	HAL_Delay
 633              	.LVL34:
 127:Core/Src/main.c ****     LCD_SetCursor(0,0);
 634              		.loc 1 127 5 view .LVU171
 635 0084 FFF7FEFF 		bl	LCD_Clear
 636              	.LVL35:
 128:Core/Src/main.c ****     LCD_SendString("LCD1 addr0x27");
 637              		.loc 1 128 5 view .LVU172
 638 0088 0021     		movs	r1, #0
 639 008a 0020     		movs	r0, #0
 640 008c FFF7FEFF 		bl	LCD_SetCursor
 641              	.LVL36:
 129:Core/Src/main.c ****     HAL_Delay(1000);
 642              		.loc 1 129 5 view .LVU173
 643 0090 3148     		ldr	r0, .L27+20
 644 0092 FFF7FEFF 		bl	LCD_SendString
 645              	.LVL37:
 130:Core/Src/main.c ****     LCD_Clear();
 646              		.loc 1 130 5 view .LVU174
 647 0096 2000     		movs	r0, r4
 648 0098 FFF7FEFF 		bl	HAL_Delay
 649              	.LVL38:
 131:Core/Src/main.c ****     LCD_ShiftText("shifting the text to the right direction for 10 seconds",'R',60,10000);
 650              		.loc 1 131 5 view .LVU175
 651 009c FFF7FEFF 		bl	LCD_Clear
 652              	.LVL39:
 132:Core/Src/main.c ****     HAL_Delay(1000);
 653              		.loc 1 132 5 view .LVU176
 654 00a0 2E4F     		ldr	r7, .L27+24
 655 00a2 2F48     		ldr	r0, .L27+28
 656 00a4 3B00     		movs	r3, r7
 657 00a6 3C22     		movs	r2, #60
 658 00a8 5221     		movs	r1, #82
 659 00aa FFF7FEFF 		bl	LCD_ShiftText
 660              	.LVL40:
 133:Core/Src/main.c ****     LCD_Clear();
 661              		.loc 1 133 5 view .LVU177
 662 00ae 2000     		movs	r0, r4
 663 00b0 FFF7FEFF 		bl	HAL_Delay
 664              	.LVL41:
 134:Core/Src/main.c **** 
 665              		.loc 1 134 5 view .LVU178
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 38


 666 00b4 FFF7FEFF 		bl	LCD_Clear
 667              	.LVL42:
 137:Core/Src/main.c ****     HAL_Delay(1000);
 668              		.loc 1 137 5 view .LVU179
 669 00b8 A026     		movs	r6, #160
 670 00ba F605     		lsls	r6, r6, #23
 671 00bc 4021     		movs	r1, #64
 672 00be 3000     		movs	r0, r6
 673 00c0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 674              	.LVL43:
 138:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_6);
 675              		.loc 1 138 5 view .LVU180
 676 00c4 2000     		movs	r0, r4
 677 00c6 FFF7FEFF 		bl	HAL_Delay
 678              	.LVL44:
 139:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 679              		.loc 1 139 5 view .LVU181
 680 00ca 4021     		movs	r1, #64
 681 00cc 3000     		movs	r0, r6
 682 00ce FFF7FEFF 		bl	HAL_GPIO_TogglePin
 683              	.LVL45:
 140:Core/Src/main.c ****     HAL_Delay(1000);
 684              		.loc 1 140 5 view .LVU182
 685 00d2 2021     		movs	r1, #32
 686 00d4 3000     		movs	r0, r6
 687 00d6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 688              	.LVL46:
 141:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 689              		.loc 1 141 5 view .LVU183
 690 00da 2000     		movs	r0, r4
 691 00dc FFF7FEFF 		bl	HAL_Delay
 692              	.LVL47:
 142:Core/Src/main.c **** 
 693              		.loc 1 142 5 view .LVU184
 694 00e0 2021     		movs	r1, #32
 695 00e2 3000     		movs	r0, r6
 696 00e4 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 697              	.LVL48:
 144:Core/Src/main.c ****     LCD_SetCursor(0,2);
 698              		.loc 1 144 5 view .LVU185
 144:Core/Src/main.c ****     LCD_SetCursor(0,2);
 699              		.loc 1 144 21 is_stmt 0 view .LVU186
 700 00e8 2223     		movs	r3, #34
 701 00ea 2B60     		str	r3, [r5]
 145:Core/Src/main.c ****     LCD_SendString("Using 1602 LCD2");
 702              		.loc 1 145 5 is_stmt 1 view .LVU187
 703 00ec 0221     		movs	r1, #2
 704 00ee 0020     		movs	r0, #0
 705 00f0 FFF7FEFF 		bl	LCD_SetCursor
 706              	.LVL49:
 146:Core/Src/main.c ****     LCD_SetCursor(1,0);
 707              		.loc 1 146 5 view .LVU188
 708 00f4 1B48     		ldr	r0, .L27+32
 709 00f6 FFF7FEFF 		bl	LCD_SendString
 710              	.LVL50:
 147:Core/Src/main.c ****     LCD_SendString("  over I2C bus");
 711              		.loc 1 147 5 view .LVU189
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 39


 712 00fa 0021     		movs	r1, #0
 713 00fc 0120     		movs	r0, #1
 714 00fe FFF7FEFF 		bl	LCD_SetCursor
 715              	.LVL51:
 148:Core/Src/main.c ****     HAL_Delay(1000);
 716              		.loc 1 148 5 view .LVU190
 717 0102 4046     		mov	r0, r8
 718 0104 FFF7FEFF 		bl	LCD_SendString
 719              	.LVL52:
 149:Core/Src/main.c ****     
 720              		.loc 1 149 5 view .LVU191
 721 0108 2000     		movs	r0, r4
 722 010a FFF7FEFF 		bl	HAL_Delay
 723              	.LVL53:
 151:Core/Src/main.c ****     LCD_SetCursor(0,0);
 724              		.loc 1 151 5 view .LVU192
 725 010e FFF7FEFF 		bl	LCD_Clear
 726              	.LVL54:
 152:Core/Src/main.c ****     LCD_SendString("LCD1 addr 0x22");
 727              		.loc 1 152 5 view .LVU193
 728 0112 0021     		movs	r1, #0
 729 0114 0020     		movs	r0, #0
 730 0116 FFF7FEFF 		bl	LCD_SetCursor
 731              	.LVL55:
 153:Core/Src/main.c ****     HAL_Delay(1000); 
 732              		.loc 1 153 5 view .LVU194
 733 011a 1348     		ldr	r0, .L27+36
 734 011c FFF7FEFF 		bl	LCD_SendString
 735              	.LVL56:
 154:Core/Src/main.c ****     LCD_Clear();
 736              		.loc 1 154 5 view .LVU195
 737 0120 2000     		movs	r0, r4
 738 0122 FFF7FEFF 		bl	HAL_Delay
 739              	.LVL57:
 155:Core/Src/main.c ****     LCD_ShiftText("shifting the text to the left direction for 10 seconds",'L',50,10000);
 740              		.loc 1 155 5 view .LVU196
 741 0126 FFF7FEFF 		bl	LCD_Clear
 742              	.LVL58:
 156:Core/Src/main.c ****     HAL_Delay(1000);
 743              		.loc 1 156 5 view .LVU197
 744 012a 1048     		ldr	r0, .L27+40
 745 012c 3B00     		movs	r3, r7
 746 012e 3222     		movs	r2, #50
 747 0130 4C21     		movs	r1, #76
 748 0132 FFF7FEFF 		bl	LCD_ShiftText
 749              	.LVL59:
 157:Core/Src/main.c ****     LCD_Clear();
 750              		.loc 1 157 5 view .LVU198
 751 0136 2000     		movs	r0, r4
 752 0138 FFF7FEFF 		bl	HAL_Delay
 753              	.LVL60:
 158:Core/Src/main.c ****    
 754              		.loc 1 158 5 discriminator 1 view .LVU199
 755 013c FFF7FEFF 		bl	LCD_Clear
 756              	.LVL61:
 112:Core/Src/main.c ****   {
 757              		.loc 1 112 9 view .LVU200
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 40


 758 0140 88E7     		b	.L26
 759              	.L28:
 760 0142 C046     		.align	2
 761              	.L27:
 762 0144 00000000 		.word	LCD_ADDR_CONFIG
 763 0148 C0000000 		.word	.LC3
 764 014c 00000000 		.word	huart2
 765 0150 00000000 		.word	.LC6
 766 0154 10000000 		.word	.LC8
 767 0158 20000000 		.word	.LC10
 768 015c 10270000 		.word	10000
 769 0160 30000000 		.word	.LC12
 770 0164 68000000 		.word	.LC14
 771 0168 78000000 		.word	.LC16
 772 016c 88000000 		.word	.LC18
 773              		.cfi_endproc
 774              	.LFE214:
 776              		.global	huart2
 777              		.section	.bss.huart2,"aw",%nobits
 778              		.align	2
 781              	huart2:
 782 0000 00000000 		.space	148
 782      00000000 
 782      00000000 
 782      00000000 
 782      00000000 
 783              		.global	hi2c1
 784              		.section	.bss.hi2c1,"aw",%nobits
 785              		.align	2
 788              	hi2c1:
 789 0000 00000000 		.space	84
 789      00000000 
 789      00000000 
 789      00000000 
 789      00000000 
 790              		.global	LCD_ADDR_CONFIG
 791              		.section	.data.LCD_ADDR_CONFIG,"aw"
 792              		.align	2
 795              	LCD_ADDR_CONFIG:
 796 0000 27000000 		.word	39
 797              		.text
 798              	.Letext0:
 799              		.file 3 "Drivers/CMSIS/Device/ST/STM32C0xx/Include/stm32c031xx.h"
 800              		.file 4 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/13.2 Rel1/arm-none-eabi/include/ma
 801              		.file 5 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/13.2 Rel1/arm-none-eabi/include/sy
 802              		.file 6 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/13.2 Rel1/lib/gcc/arm-none-eabi/13
 803              		.file 7 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_def.h"
 804              		.file 8 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_rcc.h"
 805              		.file 9 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_gpio.h"
 806              		.file 10 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_dma.h"
 807              		.file 11 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_i2c.h"
 808              		.file 12 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_uart.h"
 809              		.file 13 "Core/Inc/LCD_I2C.h"
 810              		.file 14 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_i2c_ex.h"
 811              		.file 15 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_cortex.h"
 812              		.file 16 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal.h"
 813              		.file 17 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/13.2 Rel1/arm-none-eabi/include/s
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 41


 814              		.file 18 "<built-in>"
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:173    .text.MX_GPIO_Init:0000009c $d
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:180    .text.Error_Handler:00000000 $t
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:186    .text.Error_Handler:00000000 Error_Handler
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:218    .text.MX_I2C1_Init:00000000 $t
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:223    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:309    .text.MX_I2C1_Init:0000004c $d
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:788    .bss.hi2c1:00000000 hi2c1
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:316    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:321    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:388    .text.MX_USART2_UART_Init:00000034 $d
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:781    .bss.huart2:00000000 huart2
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:394    .text.SystemClock_Config:00000000 $t
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:400    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:490    .rodata.main.str1.4:00000000 $d
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:517    .text.main:00000000 $t
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:523    .text.main:00000000 main
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:762    .text.main:00000144 $d
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:795    .data.LCD_ADDR_CONFIG:00000000 LCD_ADDR_CONFIG
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:778    .bss.huart2:00000000 $d
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:785    .bss.hi2c1:00000000 $d
C:\Users\Yasi\AppData\Local\Temp\ccAgZ3Nu.s:792    .data.LCD_ADDR_CONFIG:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
I2C_Scan
LCD_Init
strlen
HAL_UART_Transmit
LCD_SetCursor
LCD_SendString
HAL_Delay
LCD_Clear
LCD_ShiftText
HAL_GPIO_TogglePin
